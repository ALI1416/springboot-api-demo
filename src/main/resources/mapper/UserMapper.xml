<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.dao.UserDao">

	<sql id="col">id,account,pwd,name,gender,year,profile,comment,email,use_email_login,qq_openid,qq_name,use_qq_login,is_delete,create_id,create_time,update_id,update_time,version
	</sql>

	<insert id="register" parameterType="User">
		INSERT
		user(
		id,account,pwd,name,qq_openid,email
		)VALUES(
		#{id},#{account},#{pwd},#{id},#{id},#{id}
		)
	</insert>

	<insert id="registerByEmail" parameterType="User">
		INSERT
		user(
		id,account,pwd,name,qq_openid,email,use_email_login
		)VALUES(
		#{id},#{id},#{pwd},#{id},#{id},#{email},1
		)
	</insert>

	<select id="existId" parameterType="Long" resultType="Boolean">
		SELECT
		IFNULL((SELECT true FROM user WHERE id=#{id}),false)
	</select>

	<select id="existAccount" parameterType="String"
		resultType="Boolean">
		SELECT
		IFNULL((SELECT true FROM user WHERE account=#{account}),false)
	</select>

	<select id="existEmail" parameterType="String"
		resultType="Boolean">
		SELECT
		IFNULL((SELECT true FROM user WHERE email=#{email}),false)
	</select>

	<select id="existQqOpenid" parameterType="String"
		resultType="Boolean">
		SELECT
		IFNULL((SELECT true FROM user WHERE qq_openid=#{qqOpenid}),false)
	</select>

	<select id="findById" parameterType="Long" resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		WHERE
		id=#{id}
	</select>

	<select id="findByAccount" parameterType="String"
		resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		WHERE
		account=#{account}
	</select>

	<select id="findByEmail" parameterType="String"
		resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		WHERE
		email=#{email}
	</select>

	<select id="findByQqOpenid" parameterType="String"
		resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		WHERE
		qq_openid=#{qqOpenid}
	</select>

	<select id="findExact" parameterType="User" resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		<where>
			<if test="id != null">
				and id=#{id}
			</if>
			<if test="account != null and account != ''">
				and account=#{account}
			</if>
			<if test="name != null and name != ''">
				and name=#{name}
			</if>
			<if test="gender != null">
				and gender=#{gender}
			</if>
			<if test="year != null">
				and year=#{year}
			</if>
			<if test="isDelete != null">
				and is_delete=#{isDelete}
			</if>
		</where>
	</select>

	<select id="find" parameterType="UserVo" resultType="User">
		SELECT
		<include refid="col" />
		FROM
		user
		<where>
			<if test="id != null">
				and id=#{id}
			</if>
			<if test="account != null and account != ''">
				<bind name="account1" value="'%'+ account +'%'" />
				and account like #{account1}
			</if>
			<if test="name != null and name != ''">
				<bind name="name1" value="'%'+ name +'%'" />
				and name like #{name1}
			</if>
			<if test="gender != null">
				and gender=#{gender}
			</if>
			<choose>
				<!-- 忽略 -->
				<when test="year == null and yearEnd == null" />
				<!-- 首尾不会同时为null。首尾相等时，根据Not是否为null决定==和!=。 -->
				<!-- 等于 -->
				<when test="year == yearEnd and yearNot == null">
					and year = #{year}
				</when>
				<!-- 不等 -->
				<when test="year == yearEnd and yearNot != null">
					and year != #{year}
				</when>
				<!-- 首尾不会同时为null，也不会同时相等。根据首尾为null的情况决定<和>。 -->
				<!-- 小于 -->
				<when test="year == null">
					and year &lt;= #{yearEnd}
				</when>
				<!-- 大于 -->
				<when test="yearEnd == null">
					and year &gt;= #{year}
				</when>
				<!-- 首尾都不会为null，也不会相等。根据Not是否为null决定between和not between。 -->
				<!-- 在...与...之间 -->
				<when test="yearNot == null">
					and year between #{year} and #{yearEnd}
				</when>
				<!-- 不在...与...之间 -->
				<when test="yearNot != null">
					and year not between #{year} and #{yearEnd}
				</when>
			</choose>
			<if test="isDelete != null">
				and is_delete=#{isDelete}
			</if>
		</where>
	</select>

	<update id="updateById" parameterType="User">
		UPDATE user
		<set>
			<if test="account != null">
				account=#{account},
			</if>
			<if test="pwd != null">
				pwd=#{pwd},
			</if>
			<if test="name != null">
				name=#{name},
			</if>
			<if test="gender != null">
				gender=#{gender},
			</if>
			<if test="year != null">
				year=#{year},
			</if>
			<if test="profile != null">
				profile=#{profile},
			</if>
			<if test="comment != null">
				comment=#{comment},
			</if>
			<if test="email != null">
				email=#{email},
			</if>
			<if test="useEmailLogin != null">
				use_email_login=#{useEmailLogin},
			</if>
			<if test="qqOpenid != null">
				qq_openid=#{qqOpenid},
			</if>
			<if test="qqName != null">
				qq_name=#{qqName},
			</if>
			<if test="useQqLogin != null">
				use_qq_login=#{useQqLogin},
			</if>
			update_id=#{id},
			update_time=CURRENT_TIMESTAMP,
			version=version+1,
		</set>
		WHERE
		id=#{id}
	</update>

	<update id="deleteById" parameterType="Long">
		UPDATE user
		SET
		is_delete=1,
		qq_openid=#{id},
		email=#{id},
		update_id=#{id},
		update_time=CURRENT_TIMESTAMP,
		version=version+1,
		WHERE
		id=#{id}
	</update>

</mapper>